image: registry.aditsystems.de/as-crm/portal:latest
variables:
  SONAR_URL: https://sonarqube.aditsystems.de
  SONAR_USER_HOME: ${CI_PROJECT_DIR}/${CACHE_DIR}/sonar
  CI_BUILD_REF: ${CI_COMMIT_SHA}
  CI_BUILD_REF_NAME: ${CI_COMMIT_REF_NAME}
  SONAR_GITLAB_PROJECT_ID: ${CI_PROJECT_URL}
  VERBOSITY: 2

stages:
  - test

cache:
  paths:
  - ~/.cache/pip/

test:pylint:
  stage: test
  before_script:
    - pip install -r requirements-frozen.txt
  script:
    - bash ./bin/pylint.sh
  only:
    changes:
      - '**/*.py'
    refs:
      - merge_requests
      - main
      - develop
  artifacts:
    paths:
    - pylint.txt


test:django_check:
  stage: test
  only:
    - merge_requests
    - main
  before_script:
    - python -V
    - pip install -r requirements-frozen.txt
  script:
    - touch Portal.local_settings.py
    - python manage.py check

test:django:
  stage: test
  only:
    - merge_requests
    - main
  before_script:
    - python -V
    - pip install -r requirements-frozen.txt
  script:
    - touch Portal.local_settings.py
    - django-admin compilemessages
    - coverage run --branch manage.py test --settings Portal.settings_ci -v $VERBOSITY
    - coverage xml
  artifacts:
    paths:
    - coverage.xml

test:sonarqube:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
  only:
    - merge_requests
    - main
  cache:
    policy: pull

start_review:
  stage: review
  image: 1drop/php-72-docker-utils
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: "https://$CI_COMMIT_REF_NAME.$REVIEW_DOMAIN"
    on_stop: stop_review
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - rsync -av --delete --exclude=.venv . $REVIEW_USER@$REVIEW_HOST:$REVIEW_PATH/$CI_COMMIT_REF_SLUG
    - ssh $REVIEW_USER@$REVIEW_HOST "cd $REVIEW_PATH/$CI_COMMIT_REF_SLUG/ && ./bin/review_start.sh $CI_COMMIT_REF_SLUG $CI_MERGE_REQUEST_IID"
  tags:
    - nova
  only:
    - merge_requests
  except:
    - develop
  cache:
    policy: pull

stop_review:
  stage: review
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
      - ssh $REVIEW_USER@$REVIEW_HOST "cd $REVIEW_PATH/$CI_COMMIT_REF_SLUG/ && ./bin/review_stop.sh $CI_COMMIT_REF_SLUG && /bin/rm -rf ${REVIEW_PATH}/${CI_COMMIT_REF_SLUG}*"
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  tags:
    - nova
  only:
  - merge_requests
  cache:
    policy: pull
