---
apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        meta.helm.sh/release-name: prometheus-postgres-exporter
        meta.helm.sh/release-namespace: prometheus
    labels:
        app: prometheus-postgres-exporter
        release: prometheus-postgres-exporter
    name: prometheus-postgres-exporter
spec:
    replicas: 1
    selector:
        matchLabels:
            app: prometheus-postgres-exporter
            release: prometheus-postgres-exporter
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            labels:
                app: prometheus-postgres-exporter
                release: prometheus-postgres-exporter
            annotations:
                prometheus.io/exporter: "true"
        spec:
            containers:
                - args:
                      - --extend.query-path=/etc/config.yaml
                  env:
                      - name: DATA_SOURCE_USER
                        value: {{ .Values.db.user | b64enc | quote }}
                      - name: DATA_SOURCE_PASS
                        value: {{ .Values.db.pass | b64enc | quote }}
                  image: quay.io/prometheuscommunity/postgres-exporter:v0.11.1
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                      failureThreshold: 3
                      httpGet:
                          path: /
                          port: http
                          scheme: HTTP
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                  name: prometheus-postgres-exporter
                  ports:
                      - containerPort: 9187
                        name: http
                        protocol: TCP
                  readinessProbe:
                      failureThreshold: 3
                      httpGet:
                          path: /
                          port: http
                          scheme: HTTP
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                  resources: {}
            dnsPolicy: ClusterFirst
            restartPolicy: Always
